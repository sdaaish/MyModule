# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# Start on commit to master
trigger:
  batch: true
  branches:
    include:
      - master

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: PowerShell@2
  name: SetVersion
  displayName: "This sets the version for the NuGet Package"
  inputs:
    targetType: 'inline'
    script: |
      Install-Module BuildHelpers -Scope CurrentUser -Force
      Import-Module BuildHelpers
      $BuildInfo = Get-PSModuleManifest -Path $(Build.SourcesDirectory)
      $version = Get-MetaData $BuildInfo
      Write-Host "##vso[task.setvariable variable=pkgversion]$version"
    pwsh: true

- task: NuGetCommand@2
  name: NuGetPack
  displayName: "Pack the module with NuGet"
  inputs:
    command: 'pack'
    packagesToPack: '**/*.nuspec'
    packDestination: '$(Build.ArtifactStagingDirectory)/package'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'pkgversion'

- task: PowerShell@2
  name: CheckFolder
  displayName: "Checks the output of the folder"
  inputs:
    targetType: inline
    script: |
      Get-ChildItem '$(Build.ArtifactStagingDirectory)/package'
    pwsh: true


- task: NuGetCommand@2
  name: NuGetPush
  displayName: "Push the package to the modulesdirectory"
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/package/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'internal'
    publishVstsFeed: '68bd804e-dcb2-4173-a112-4edeae5576d9/1eb64e71-f612-47be-86eb-07f0d4e719a5'
